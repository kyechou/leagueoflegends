#!/bin/bash

set -euo pipefail

msg() {
    echo -e "[+] ${1-}" >&2
}

die() {
    echo -e "[!] ${1-}" >&2
    exit 1
}

version_le() {
    lesser_version="$(echo -e "$1\n$2" | sort -V | head -n1)"
    [ "$1" = "$lesser_version" ]
}

askQ() {
    count=1
    first_arg="$2"
    echo
    echo "    $1"
    for var in "${@:2}"; do
        echo "    #$count - $2"
        ((count++))
        shift
    done
    echo
}

check_depends() {
    depends=(wine wineboot winetricks winecfg wineserver winepath curl glxinfo)
    for dep in ${depends[@]}; do
        if ! command -v "$dep" >/dev/null 2>&1; then
            die "Missing $dep"
        fi
    done

    optdepends=(zenity)
    for dep in ${optdepends[@]}; do
        if command -v "$dep" >/dev/null 2>&1; then
            export "HAS_$(echo $dep | awk '{ print toupper($0) }')"=1
        fi
    done
}

check_vulkan() {
    if [ -z "${VK_ICD_FILENAMES+x}" ]; then
        # VK_ICD_FILENAMES has not been set
        # Get the active graphic card vendor
        VENDOR_STRING="$(glxinfo -B | grep 'OpenGL vendor string' | cut -d: -f2)"
        if echo "$VENDOR_STRING" | grep -iqF amd; then
            VK_ICD_FILENAMES="$(echo /usr/share/vulkan/icd.d/{radeon,amd}* | sed 's/ /:/g')"
        elif echo "$VENDOR_STRING" | grep -iqF nvidia; then
            VK_ICD_FILENAMES="$(echo /usr/share/vulkan/icd.d/nvidia* | sed 's/ /:/g')"
        elif echo "$VENDOR_STRING" | grep -iqF intel; then
            VK_ICD_FILENAMES="$(echo /usr/share/vulkan/icd.d/intel* | sed 's/ /:/g')"
        fi
    fi

    export VK_ICD_FILENAMES
}

export_env_variables() {
    export PATH="/opt/wine-lol/bin:$PATH"
    export REGFILE="/usr/share/doc/leagueoflegends/leagueoflegends.reg"
    export ICON="/usr/share/icons/hicolor/256x256/apps/leagueoflegends.png"
    export CACHE_DIR="$HOME/.cache/leagueoflegends"

    export WINEARCH=win32
    export WINEDEBUG=-all
    export WINEDLLOVERRIDES="mscoree,mshtml,winemenubuilder.exe=;d3d10,d3d11=n,b"
    export WINE_REQ_MOD=(vcrun2019)
    export WINEPREFIX="$HOME/.local/share/leagueoflegends"
    export INSTALL_DIR="$WINEPREFIX/drive_c/Riot Games"
    export CLIENT_EXE="$INSTALL_DIR/Riot Client/RiotClientServices.exe"
    export RUNES_FILE="$INSTALL_DIR/League of Legends/Config/PerksPreferences.yaml"

    export MESA_GLTHREAD=true
    export STAGING_SHARED_MEMORY=1
    export WINE_LARGE_ADDRESS_AWARE=1
    export __GL_SHADER_DISK_CACHE=1
    export __GL_SHADER_DISK_CACHE_PATH="$WINEPREFIX"
    export __GL_THREADED_OPTIMIZATIONS=1
    export DXVK_LOG_LEVEL=none
    export DXVK_STATE_CACHE=0
}

export_env_variables_garena() {
    export_env_variables
    export WINEPREFIX="$HOME/.local/share/garena"
    WINE_REQ_MOD+=(vcrun2013)   # https://bugs.winehq.org/show_bug.cgi?id=47375
    export WINE_REQ_MOD
    export INSTALL_DIR="$WINEPREFIX/drive_c/Program Files/Garena"
    export GARENA_EXE="$INSTALL_DIR/Garena/Garena.exe"
    if ls "$INSTALL_DIR"/Games/*/lol.version &>/dev/null; then
        export GAME_DIR="$(dirname "$(ls "$INSTALL_DIR"/Games/*/lol.version | head -n1)")"
        export CLIENT_EXE="$GAME_DIR/Riot Client/RiotClientServices.exe"
        export RUNES_FILE="$GAME_DIR/League of Legends/Config/PerksPreferences.yaml"
    else
        export GAME_DIR=""
        export CLIENT_EXE=""
        export RUNES_FILE=""
    fi

    WINE_VERSION="$(wine --version | cut -d ' ' -f 1 | sed 's/wine-//')"
    if version_le "6.0" "$WINE_VERSION"; then
        export PATH_GARENA="$PATH"
    else
        local PATH="$(echo "$PATH" | sed 's,/opt/wine-lol/bin:,,g')"
        export PATH_GARENA="$PATH"
        WINE_GARENA_VERSION="$(wine --version | cut -d ' ' -f 1 | sed 's/wine-//')"
        if ! version_le "6.0" "$WINE_GARENA_VERSION"; then
            die "The wine version $WINE_GARENA_VERSION is too old for running Garena client"
        fi
    fi
}

check_syscall() {
    if [ "$(command -v wine)" = "/opt/wine-ge-lol/bin/wine" ]; then
        if [ "$(cat /proc/sys/abi/vsyscall32)" -ne 0 ]; then
            message=$(cat <<EOF
Your system is not configured to work with League's anticheat.
Please make sure the kernel parameter abi.vsyscall32 is set to 0.
For more detail, see https://github.com/kyechou/leagueoflegends
EOF
            )
            if [ ${HAS_ZENITY-0} -eq 1 ]; then
                zenity --warning --width=500 --title="League of Legends" \
                    --window-icon="$ICON" --text="$message"
            fi
            die "$message"
        fi
    fi
}

create_wineprefix() {
    if [ -e "$WINEPREFIX" ]; then
        die "Wineprefix $WINEPREFIX already exists"
    fi

    msg "Creating wineprefix: $WINEPREFIX"
    mkdir -p "$WINEPREFIX"
    wineboot --init
    msg "Installing winetricks verbs: ${WINE_REQ_MOD[*]}"
    winetricks -q --optout --force "${WINE_REQ_MOD[@]}"
    for link in "$WINEPREFIX/dosdevices"/*; do
        [[ "$link" =~ 'c:' ]] && continue # for drive_c
        [[ "$link" =~ 'z:' ]] && continue # for /
        msg "Removing unnecessary device $(basename $link)"
        unlink "$link"
    done
    msg "Modifying WINE registry with $REGFILE"
    regedit "$REGFILE"
    msg "Waiting for wine processes..."
    wineserver --wait
    add_dxvk
    msg "Wineprefix created: $WINEPREFIX"
}

install_LoL() {
    if [ ! -d "$WINEPREFIX" ]; then
        create_wineprefix
    elif [ -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game has been installed. Install anyway? [Y/n] "
            read force
            force="$(echo "$force" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${force##y*}" ]; then
                break
            elif [ -z "${force##n*}" ]; then
                exit 1
            fi
        done
    fi

    askQ "Select your region" \
        "North America" "EU West" "EU Nordic & East" "Latin America North" \
        "Latin America South" "Brazil" "Turkey" "Russia" "Japan" "Oceania" \
        "Republic of Korea"
    read -p "    #: " answer

    case "${answer}" in
        1) # North America
            export LANG_CODE="na" ;;
        2) # EU West
            export LANG_CODE="euw" ;;
        3) # EU Nordic & East
            export LANG_CODE="eune" ;;
        4) # Latin America North
            export LANG_CODE="la1" ;;
        5) # Latin America South
            export LANG_CODE="la2" ;;
        6) # Brazil
            export LANG_CODE="br" ;;
        7) # Turkey
            export LANG_CODE="tr" ;;
        8) # Russia
            export LANG_CODE="ru" ;;
        9) # Japan
            export LANG_CODE="jp" ;;
        10) # Oceania
            export LANG_CODE="oc1" ;;
        11) # Republic of Korea
            export LANG_CODE="kr" ;;
        *)
            die "Unknown region number: $answer" ;;
    esac

    INSTALLER="$CACHE_DIR/installer.$LANG_CODE.exe"
    INSTALLER_URL="https://lol.secure.dyn.riotcdn.net/channels/public/x/installer/current/live.$LANG_CODE.exe"

    if [ ! -e "$INSTALLER" ]; then
        msg "Downloading installer..."
        mkdir -p "$CACHE_DIR"
        curl --silent --show-error -Lo "$INSTALLER" "$INSTALLER_URL"
    fi
    msg "Installing League of Legends..."
    wine "$(winepath -w "$INSTALLER")"
    msg "Waiting for wine processes..."
    wineserver --wait
    msg "The game is installed at $INSTALL_DIR"
}

install_garena() {
    # Create the wine environment from which we launch the game
    if [ ! -d "$WINEPREFIX" ]; then
        create_wineprefix
    fi

    export_env_variables_garena

    # Create the wine environment in which the game is installed
    if [ ! -d "$WINEPREFIX" ]; then
        create_wineprefix
    elif [ -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game has been installed. Remove it and reinstall? [Y/n] "
            read remove
            remove="$(echo "$remove" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${remove##y*}" ]; then
                rm -rf "$INSTALL_DIR"
                break
            elif [ -z "${remove##n*}" ]; then
                exit 1
            fi
        done
    fi

    askQ "Select your region" \
        "Taiwan, Hong Kong, Macau" \
        "Singapore, Malaysia, Indonesia, Philippines" \
        "Vietnam" \
        "Thailand"
    read -p "    #: " answer

    case "${answer}" in
        1) # Taiwan, Hong Kong, Macau
            export LANG_CODE="tw"
            export URL="https://cdn.gxx.garenanow.com/gxx/pc/installer/Garena-v2.0-TW.exe"
            ;;
        2) # Singapore, Malaysia, Indonesia, Philippines
            export LANG_CODE="sg"
            export URL="https://cdn.gxx.garenanow.com/gxx/pc/installer/Garena-v2.0.exe"
            ;;
        3) # Vietnam
            export LANG_CODE="vn"
            export URL="https://cdn.gxx.garenanow.com/gxx/pc/installer/Garena-v2.0-VN.exe"
            ;;
        4) # Thailand
            export LANG_CODE="th"
            export URL="https://cdn.gxx.garenanow.com/gxx/pc/gameinst/Garena-v2.0-LOLTH.exe"
            ;;
        *)
            die "Unknown region number: $answer" ;;
    esac

    INSTALLER="$CACHE_DIR/garena-installer.$LANG_CODE.exe"
    if [ ! -e "$INSTALLER" ]; then
        msg "Downloading Garena..."
        mkdir -p "$CACHE_DIR"
        curl --silent --show-error -Lo "$INSTALLER" "$URL"
    fi
    msg "Installing Garena..."
    wine "$(winepath -w "$INSTALLER")" &
    pid=$!
    until ! ps -p $pid >/dev/null; do sleep 1; done
    wineserver --kill
    wineserver --wait
    msg "Garena is installed at $INSTALL_DIR/Garena"

    msg "Installing LoL from Garena..."
    wine "$(winepath -w "$GARENA_EXE")" &
    pid=$!
    until ! ps -p $pid >/dev/null; do sleep 1; done
    wineserver --kill
    wineserver --wait
    export_env_variables_garena
    msg "The game is installed at $GAME_DIR"
}

uninstall_LoL() {
    msg "Uninstalling league of legends..."
    set +e
    rm -rf "$CACHE_DIR" "$WINEPREFIX"

    # clean up menu entries
    rm -rf \
        ~/.config/menus/applications-merged/*-League\ of\ Legends* \
        ~/.local/share/applications/wine/Programs/Riot\ Games \
        ~/.local/share/desktop-directories/*-League\ of\ Legends.directory \
        ~/.local/share/desktop-directories/*-Riot\ Games.directory
    find -H ~/.config/menus/applications-merged -empty -delete
    find -H ~/.config/menus -empty -delete
    find -H ~/.local/share/applications/wine/Programs -empty -delete
    find -H ~/.local/share/applications/wine -empty -delete
    find -H ~/.local/share/applications -empty -delete
    set -e
}

uninstall_garena() {
    export_env_variables_garena

    msg "Uninstalling Garena..."
    rm -rf "$WINEPREFIX"
}

#
# https://www.reddit.com/r/leagueoflinux/comments/j07yrg/starting_the_client_script/
#
port_waiting_daemon() {
    # Find PID
    process=LeagueClientUx.exe
    uxpid=$(timeout 2m sh -c "until ps -C $process -o pid=; do sleep 1; done | sed 's/[[:space:]]*//g'")
    if [ -z "$uxpid" ]; then
        die "Could not find process ${process}"
    fi

    # Get the app-port parameter
    port=$(xargs -0 <"/proc/${uxpid}/cmdline" | sed -n 's/.*--app-port=\([[:digit:]]*\).*/\1/p')
    if [ -z "$port" ]; then
        die "Could not find --app-port of LeagueClientUx.exe"
    fi

    # Suspend the league client until app-port gets available
    kill -STOP ${uxpid}
    timeout 5m bash -c "
    until openssl s_client -connect :${port} <<< Q >/dev/null 2>&1; do
        sleep 1
    done"
    kill -CONT ${uxpid}
}

loading_screen() {
    if [ ${HAS_ZENITY-0} -eq 1 ]; then
        zenity --progress --pulsate --auto-close --no-cancel \
            --title="League of Legends" --window-icon="$ICON" \
            --text="Waiting for the League client port to open..."
    fi
}

save_runes() {
    # Temporary workaround to prevent the rune pages getting overwritten when
    # the League client launches (https://github.com/kyechou/leagueoflegends/issues/38)
    if [ -f "$RUNES_FILE" ]; then
        chmod a-w "$RUNES_FILE"
    fi
}

start_LoL() {
    if [ ! -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game is not installed. Install it? [Y/n] "
            read install
            install="$(echo "$install" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${install##y*}" ]; then
                install_LoL
                break
            elif [ -z "${install##n*}" ]; then
                exit 1
            fi
        done
    fi

    # prelaunch helper (disabled for fixed wine-lol)
    #( port_waiting_daemon ) | loading_screen &

    msg "Starting..."
    save_runes
    wine "$(winepath -w "$CLIENT_EXE")"# \
        #--launch-product=league_of_legends \
        #--launch-patchline=live
    wineserver --wait
    wait
}

start_garena() {
    export_env_variables_garena

    if [ ! -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game is not installed. Install it? [Y/n] "
            read install
            install="$(echo "$install" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${install##y*}" ]; then
                install_garena
                break
            elif [ -z "${install##n*}" ]; then
                exit 1
            fi
        done
    fi

    # Remove libEGL.dll files for Garena client having blank screen
    find "$INSTALL_DIR" -type f -name '*libEGL.dll' -exec rm {} +

    # Start Garena in the background with wine >= 6.0
    # Note that Garena is unsupported if wine-lol=5.18 is used.
    # https://github.com/nhubaotruong/league-of-legends-linux-garena-script
    # https://www.reddit.com/r/leagueoflinux/comments/jzbfzb/
    # https://www.reddit.com/r/leagueoflinux/comments/jzbfzb/comment/gt7td4k/
    OLD_PATH=$PATH
    export PATH=$PATH_GARENA
    wine "$(winepath -w "$GARENA_EXE")" &

    # Get the Riot Client pid and command-line argument
    name=RiotClientServices.exe
    process="$(until ps -C $name -o cmd=,; do sleep 1; done)"
    riot_argument="$(echo "$process" | awk -F '.exe ' '{print $2}')"

    # Kill the Garena process
    wineserver --kill
    wineserver --wait

    # prelaunch helper
    ( port_waiting_daemon ) | loading_screen &

    # Launch the game directly with the riot argument (garena tokens)
    msg "Starting..."
    save_runes
    export PATH=$OLD_PATH
    wine "$(winepath -w "$CLIENT_EXE")" $riot_argument
    wineserver --wait
    wait
}

download_dxvk() {
    DXVK_VERSION="$(curl -s https://api.github.com/repos/doitsujin/dxvk/releases/latest | grep 'tag_name' | cut -d\" -f4 | tr -d v)"
    DXVK_URL="https://github.com/doitsujin/dxvk/releases/download/v$DXVK_VERSION/dxvk-$DXVK_VERSION.tar.gz"
    DXVK_TARBALL="$CACHE_DIR/dxvk-$DXVK_VERSION.tar.gz"

    if [ ! -e "$DXVK_TARBALL" ]; then
        msg "Downloading DXVK tarball"
        mkdir -p "$CACHE_DIR"
        curl --silent --show-error -Lo "$DXVK_TARBALL" "$DXVK_URL"
    fi
    msg "Extracting DXVK tarball..."
    tar xzf "$DXVK_TARBALL" -C "$CACHE_DIR"
}

rm_dxvk_cache() {
    if [ -d "$CACHE_DIR" ]; then
        find "$CACHE_DIR" -type f -name '*.dxvk-cache' -exec rm {} +
    fi
}

add_dxvk() {
    if [ ! -d "$WINEPREFIX" ]; then
        die "The game is not installed. Please install it first"
    fi

    download_dxvk
    msg "Installing DXVK to $WINEPREFIX"
    "$CACHE_DIR/dxvk-$DXVK_VERSION/setup_dxvk.sh" install --with-d3d10
    msg "DXVK is installed"
}

del_dxvk() {
    if [ ! -d "$WINEPREFIX" ]; then
        die "The game is not installed. Please install it first"
    fi

    download_dxvk
    msg "Uninstalling DXVK from $WINEPREFIX"
    "$CACHE_DIR/dxvk-$DXVK_VERSION/setup_dxvk.sh" uninstall
    msg "DXVK is removed"
}

cleanup_logs() {
    msg "Cleaning up log files..."
    if [ -d "$INSTALL_DIR" ]; then
        find -H "$INSTALL_DIR" -name "*.log" -delete -print
        if [ -d "$INSTALL_DIR/League of Legends/Logs" ]; then
            find -H "$INSTALL_DIR/League of Legends/Logs" -type f -delete -print
            find -H "$INSTALL_DIR/League of Legends/Logs" -empty -delete -print
        fi
    fi
}

usage() {
    cat <<EOF
[!] Usage: $(basename "${BASH_SOURCE[0]}") [options] <command>

    League of Legends - helper program

    Options:
        -h, --help          Print this message and exit
        -v, --verbose       Enable verbose output

    Commands:
        start               Start LoL
        install             Install LoL
        uninstall           Uninstall LoL
        reinstall           Reinstall LoL
        start-garena        Start Garena
        install-garena      Install Garena
        uninstall-garena    Uninstall Garena
        reinstall-garena    Reinstall Garena
        add-dxvk            Install DXVK to the LoL wineprefix
        del-dxvk            Remove DXVK from the LoL wineprefix
        rm-dxvk-cache       Remove DXVK cache
        cleanup-logs        Remove log files
        kill                Kill the wine processes of the wineprefix
        kill-garena         Kill the Garena wine processes
        run <cmd>           Run shell command with environment variables
        run-garena <cmd>    Run shell command with environment variables
EOF
}

main() {
    check_depends
    check_vulkan
    export_env_variables
    check_syscall

    while :; do
        case "${1-}" in
        -h | --help) usage; exit ;;
        -v | --verbose)
            set -x
            export WINEDEBUG=fixme-all
            export VK_LOADER_DEBUG=all ;;
        --) shift; break ;;
        -?*) die "Unknown option: ${1-}\n$(usage)" ;;
        *) break ;;
        esac
        shift
    done

    case "${1-}" in
        start) start_LoL ;;
        install) install_LoL ;;
        uninstall) uninstall_LoL ;;
        reinstall) uninstall_LoL && install_LoL ;;
        start-garena) start_garena ;;
        install-garena) install_garena ;;
        uninstall-garena) uninstall_garena ;;
        reinstall-garena) uninstall_garena && install_garena ;;
        add-dxvk) add_dxvk ;;
        del-dxvk) del_dxvk ;;
        rm-dxvk-cache) rm_dxvk_cache ;;
        cleanup-logs) cleanup_logs ;;
        kill)
            wineserver --kill
            pkill -f -- '--title=League of Legends' # kill the zenity dialog
            ;;
        kill-garena)
            export_env_variables_garena
            wineserver --kill
            pkill -f -- '--title=League of Legends' # kill the zenity dialog
            ;;
        run) shift; $@ ;;
        run-garena) shift; export_env_variables_garena; $@ ;;
        *) die "Unknown command: ${1-}\n$(usage)" ;;
    esac
}


main $@

# vim: set ts=4 sw=4 et:
